NGameplay = {
	COMMAND_LIMIT_MAX					= 2000		# Max value of Command Limit
	NAVAL_CAPACITY_MAX					= 100000		# Max value of Naval Capacity
	COUNTRY_ENCLAVE_CAPACITY_MAX = 0
#	TRADITION_COST_TRADITION_EXP			= 1.650	# change this value if you want to increase costs at the end
	MAX_PLANET_BUILDING_SLOTS				= 16
	
	COUNCIL_AGENDA_COOLDOWN 				= 3600
	
	TRUCE_YEARS							= 5	# Truce last for 10 years

#	LEADER_BASE_SKILL_CAP	= 15
#	LEADER_MAX_SKILL_CAP	= 15
#	LEADER_AGE_HEIR_MIN		= 16				# Min age of generated heirs in dynastic governments
#	LEADER_AGE_HEIR_MAX		= 16				# Max age of generated heirs in dynastic governments
#	LEADER_AGE_MIN			= 16				# Min age of generated leaders
#	LEADER_AGE_MAX			= 16				# Max age of generated leaders
#	LEADER_EXPERIENCE_REQUIREMENT_BASE_VALUE					= 250 # Base value when calculating required experience for next skill level
#	LEADER_EXPERIENCE_REQUIREMENT_SCALE_VALUE					= 200 # Scale factor when calculating required experience for next skill level

#	EMPIRE_SIZE_FROM_DISTRICTS				= 0	# Per district
#	EMPIRE_SIZE_FROM_SYSTEMS				= 0		# Per system
#	EMPIRE_SIZE_FROM_COLONIES				= 30	# Per planet
#	EMPIRE_SIZE_FROM_BRANCH_OFFICES			= 0		# Per branch office
#	EMPIRE_SIZE_FROM_POPS					= 1		# Per pop
	
	INTEGRATE_SUBJECT_MIN_DAYS				= 600 # Amount of days the subject has been a subject before we can integrate it
#	SUBJECT_LOYALTY_MAX = 100					# Max value of loyalty	
	
	ORBITAL_BOMBARDMENT_FLEET_BASE_SIZE		= 300 # Over this amount of fleet cap bombarding we will start getting penalties to efficiency
	ORBITAL_BOMBARDMENT_KILL_POP_COOLDOWN			= 3	# Min days between killing pops from bombardment
	PLANET_HEALTH_REGEN					= 0.15			# Each day

	RESOLUTION_VOTE_TIMER = 365					# number of days a resolution will be on the senate floor before being passed/failed
	RESOLUTION_VOTE_PREMATURE_TIMER = 365			# number of days until the custodian/emperor can prematurely end the senate session
	SENATE_RECESS_TIMER = 420						# number of days until the next proposed resolution will be put on the floor after the current vote
	CATEGORY_VOTE_COOLDOWN = 960					# time before another resolution in a given category can proposed again
	TYPE_VOTE_COOLDOWN = 2060						# time before a referendum of a given type can be proposed again
	VETO_COOLDOWN = 900							# time before a country can enact another veto
}
NPop = {
	MAX_CARRYING_CAPACITY				= 5000		# Logistic Carrying Capacity Cap (so modders have access to this value in case they make a planet with infinite districts or something like that)
	REQUIRED_POP_GROWTH					= 100		# Required growth to make a new pop
	BASE_POP_GROWTH						= 3		# Base growth rate of pops
	LOGISTIC_POP_GROWTH_LOWER_THRESHOLD	= 10	# Ignore penalties to Pop Growth if the current number of pops are below this percent of the carrying capacity
	REQUIRED_POP_ASSEMBLY				= 100		# Required assembly to add a pop
	RESETTLE_UNEMPLOYED_BASE_RATE		= 0.5	# Chance an unemployed pop will automatically migrate if an acceptable location is found (Range is 0 to 1)
}
NEconomy = {
	CLAIM_COST_BASE						= 10.0		# The influence base cost of making claims
	CLAIM_COST_STARBASE					= 0		# Added cost for upgraded starbase
	CLAIM_COST_COLONY					= 175.0		# Added cost for colonized system
	CLAIM_COST_DISTANCE					= 0		# Added per hyperlane jump away
	CLAIM_COST_MULT_OFFENSIVE_WAR		= 0		# Claims are ( 1 + this ) much more expensive to add for attackers in war
	
	COMMERCIAL_PACT_VALUE_MULT			= 0.13

	TRADE_AMOUNT_MULTIPLIER				= { 1 5 25 100 250 } # Multiplier interval for resource trading base amount
	MARKET_TRADE_FEE_BASE				= 0.3	# Base procentage for market trade fee
	MARKET_TRADE_FEE_MIN				= 0.01	# Minumum trade fee percentage
	MARKET_FLUCTUATION_ABOVE_BASE_PRICE		= 1	# Base fluctuation when trading a resource' base amount if price is > 0
	MARKET_FLUCTUATION_BELOW_BASE_PRICE		= 0.5	# Base fluctuation when trading a resource' base amount if price is <= 0
	MARKET_MIN_FLUCTUATION_FROM_BASE_PRICE	= -50	# Min fluctuation from base price
	MARKET_MAX_FLUCTUATION_FROM_BASE_PRICE	= 300	# Max fluctuation from base price
	MARKET_DAYS_TO_BASE_PRICE				= 1000	# Days until resource price reaches base price from max or min price
	MARKET_FLUCTUATION_EPSILON			= 0.5	# If | fluctuation | < epsilon, reset fluctuation to zero
	MARKET_MONTHLY_TRADE_FRACTION		= 0.1	# market base amount will be multiplied by this when determining starting amount of a monthly market trade
	MARKET_MAX_BASE_AMOUNTS				= 250	# Max resource base amounts that the player is allowed to trade in a single trade
	
	SLAVE_MARKET_SLAVE_BASE_COST_AMOUNT		= { 500 }
}
NAI = {
	AI_AGGRESSIVENESS_HIGH_MULT = 200
	VASSALIZATION_ACCEPTANCE_NUM_POPS = -100			# per pop
	MAX_CLAIM_DISTANCE = 7					# Max number of jumps away AI will make claims on
	MAX_CLAIM_DISTANCE_SUBJECT = 5			# Max number of jumps away AI subjects will make claims on
	CLAIM_BASE_VALUE = 350
	CLAIM_RESOURCE_FACTOR = 2				# How much will AI prioritize resource-rich systems when making claims
	CLAIM_BYPASS_FACTOR = 20				# How much will AI prioritize systems with bypasses when making claims
	CLAIM_RELATIONS_FACTOR = -0.02			# How much will AI factor in opinion when making claims
	CLAIM_COST_FACTOR = -0.05				# How much will AI prioritize resource-rich systems when making claims
	CLAIM_COLONY_FACTOR = 25				# How much will AI prioritize colonies when making claims
	CLAIM_BORDERING_FACTOR = 100			# How much will AI prioritize bordering systems when making claims
	
#	PEACE_WAR_EXHAUSTION_FACTOR = 100
#	PEACE_OCCUPATION_FACTOR = 100
#	PEACE_STATUS_QUO_FACTOR = -75
#	PEACE_HIGH_WE_STATUS_QUO_FACTOR = 100
#	PEACE_STALE_WAR_STATUS_QUO_FACTOR = 75 	# Extra AI acceptance for status quo when they are in a stale war where nothing can happen
#	STALE_WAR_TIMER = 10 					# Number of times the AI has to fail at finding any military objectives to trigger the stale war
#	PEACE_DEMAND_SURRENDER_FACTOR = -100
#	PEACE_DEFENDING_CLAIM_SYSTEM_FACTOR = -10	# For every system
#	PEACE_DEFENDING_CLAIM_STARBASE_FACTOR = -40	# For systems with upgraded starbases
#	PEACE_DEFENDING_CLAIM_PLANET_FACTOR = -100	# For systems with colonies
#	PEACE_RELATIVE_NAVY_STRENGTH_FACTOR = 50
}